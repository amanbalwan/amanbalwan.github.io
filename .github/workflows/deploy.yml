name: Deploy site

on:
  push:
    branches:
      - master
      - main
    paths:
      - "assets/**"
      - "**.bib"
      - "**.html"
      - "**.js"
      - "**.liquid"
      - "**/*.md"
      - "**.yml"
      - "Gemfile"
      - "Gemfile.lock"
      - "!.github/workflows/**"
      - "!lighthouse_results/**"
      - "!CONTRIBUTING.md"
      - "!README.md"
  pull_request:
    branches:
      - master
      - main
    paths:
      - "assets/**"
      - "**.bib"
      - "**.html"
      - "**.js"
      - "**.liquid"
      - "**/*.md"
      - "**.yml"
      - "Gemfile"
      - "Gemfile.lock"
      - "!.github/workflows/**"
      - "!lighthouse_results/**"
      - "!CONTRIBUTING.md"
      - "!README.md"
  workflow_dispatch:

permissions:
  contents: write # Allow GitHub Pages action to write to repository

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      # Step 2: Setup Ruby and install dependencies
      - name: Setup Ruby 💎
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2" # Updated to Ruby 3.2 (compatible with activesupport 8.0.0)
          bundler-cache: true # Enable caching of Bundler gems to speed up builds

      # Step 3: Install dependencies (gems in Gemfile)
      - name: Install dependencies 💎
        run: |
          gem install bundler # Ensure Bundler is installed
          bundle install # Install all gems in the Gemfile (including Jekyll and plugins)

      # Step 4: Setup Python (if needed for additional tasks like Jupyter notebooks)
      - name: Setup Python 🐍
        uses: actions/setup-python@v5
        with:
          python-version: "3.9" # Adjust Python version if needed
          cache: "pip" # Cache Python dependencies (if relevant)

      # Step 5: Update _config.yml (e.g., for giscus integration or dynamic config changes)
      - name: Update _config.yml ⚙️
        uses: fjogeleit/yaml-update-action@main
        with:
          commitChange: false
          valueFile: "_config.yml"
          propertyPath: "giscus.repo"
          value: ${{ github.repository }}

      # Step 6: Build Jekyll site
      - name: Build Jekyll site 🔧
        run: |
          export JEKYLL_ENV=production  # Set production environment for Jekyll
          bundle exec jekyll build  # Build the Jekyll site

      # Step 7: Optional Purge CSS step (only if you're using PurgeCSS to minimize CSS)
      - name: Purge unused CSS 🧹
        run: |
          npm install -g purgecss  # Install PurgeCSS globally
          purgecss -c purgecss.config.js  # Run PurgeCSS to remove unused CSS classes

      # Step 8: Deploy to GitHub Pages
      - name: Deploy 🚀
        if: github.event_name != 'pull_request' # Only deploy on push (not on PR)
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: _site # Folder to deploy to GitHub Pages
